check process nginx with pidfile "/var/run/nginx.pid"
  if not exist for 5 cycles then restart

  # Using quotes around nginx arguments is needed for later versions of nginx.
  start program = "/usr/bin/env bash -c /usr/sbin/nginx -g 'daemon off;'" with timeout 60 seconds
  stop program = "/usr/bin/env bash -c /usr/sbin/nginx -s stop"
  
  every 3 cycles
  if cpu > 80% for 10 cycles then exec "/usr/bin/env bash -c /usr/sbin/nginx -s stop"

check program wwwdata-permissions with path /usr/bin/env bash -c "check_wwwdata permission"
  every 3 cycles
  if status != 0 
  then exec "/usr/bin/env bash -c 'find {{NGINX_DOCROOT}} -type d -exec chmod 775 {} \; && find {{NGINX_DOCROOT}} -type f -exec chmod 664 {} \;'"

check program wwwdata-owner with path /usr/bin/env bash -c "check_wwwdata owner"
  every 3 cycles
  if status != 0 
  then exec "/usr/bin/env bash -c 'find {{NGINX_DOCROOT}} -type d -exec chown www-data:www-data {} \; && find {{NGINX_DOCROOT}} -type f -exec chown www-data:www-data {} \;'"

check directory cache-permissions with path {{CACHE_PREFIX}}
  every 20 cycles
  if failed permission 755 
  then exec "/usr/bin/env bash -c 'find {{CACHE_PREFIX}} -type d -exec chmod 755 {} \;'"

check directory cache-owner with path {{CACHE_PREFIX}}
  every 20 cycles
  if failed uid www-data 
  then exec "/usr/bin/env bash -c 'find {{CACHE_PREFIX}} -type d -exec chown www-data:www-data {} \; && find {{CACHE_PREFIX}} -type f -exec chown www-data:www-data {} \;'"

check program cache-size with path /usr/bin/env bash -c "check_folder {{CACHE_PREFIX}} 500"
  every 20 cycles
  if status != 0 
  then exec "/usr/bin/env bash -c 'rm -Rf /var/cache/*'"

check file env_config with path /etc/docker/environment/default.env
  if changed timestamp 
  then exec "/usr/bin/env bash -c '/usr/bin/reload_nginx >/proc/$(cat /var/run/nginx.pid || echo $$)/fd/1 2>&1'"
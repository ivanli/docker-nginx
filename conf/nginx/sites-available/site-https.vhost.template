
server {
  server_name                     {{SERVER_NAME}} www.{{SERVER_NAME}};
  server_tokens                   off;
  server_name_in_redirect         off;

  listen                          *:80;
  listen                          [::]:80 reuseport;

  access_log                      {{LOG_PREFIX}}/access.log main_ext if=$no_logs;
  
  include                         /etc/nginx/bots.d/blockbots.conf;
  include                         /etc/nginx/bots.d/ddos.conf;
  include                         /etc/nginx/header.d/httpd.conf;

  return                          301 https://{{SERVER_NAME}}$request_uri;
}

server {
  server_name                     www.{{SERVER_NAME}};
  server_tokens                   off;
  server_name_in_redirect         off;

  listen                          *:443 ssl;
  listen                          [::]:443 ssl reuseport;

  access_log                      {{LOG_PREFIX}}/access.log main_ext if=$no_logs;

  ssl_certificate                 /etc/letsencrypt/live/www.{{SERVER_NAME}}/fullchain.pem;
  ssl_certificate_key             /etc/letsencrypt/live/www.{{SERVER_NAME}}/privkey.pem;
  ssl_trusted_certificate         /etc/letsencrypt/live/www.{{SERVER_NAME}}/chain.pem;

  include                         /etc/nginx/conf.d/ssl.conf;
  include                         /etc/nginx/bots.d/blockbots.conf;
  include                         /etc/nginx/bots.d/ddos.conf;
  include                         /etc/nginx/header.d/httpd.conf;

  return                          301 https://{{SERVER_NAME}}$request_uri;
}

server {
  server_name                     {{SERVER_NAME}};
  server_tokens                   off;
  server_name_in_redirect         off;

  listen                          *:443 ssl http2;
  listen                          [::]:443 ssl http2 reuseport;

  root                            {{NGINX_DOCROOT}}/{{SERVER_NAME}};

  http2_push_preload              on;

  limit_req                       zone=req_zone burst=100 nodelay;
  set                             $naxsi_flag_enable 0;

  access_log                      {{LOG_PREFIX}}/access.log main_ext if=$no_logs;

  userid                          on;
  userid_name                     _uid;
  userid_path                     /;
  userid_expires                  max;
  userid_domain                   $domain;

  ssl_certificate                 /etc/letsencrypt/live/{{SERVER_NAME}}/fullchain.pem;
  ssl_certificate_key             /etc/letsencrypt/live/{{SERVER_NAME}}/privkey.pem;
  ssl_trusted_certificate         /etc/letsencrypt/live/{{SERVER_NAME}}/chain.pem;
  
  include                         /etc/nginx/conf.d/ssl.conf;
  include                         /etc/nginx/bots.d/blockbots.conf;
  include                         /etc/nginx/bots.d/ddos.conf;

  include                         /etc/nginx/header.d/httpd.conf;
  include                         /etc/nginx/header.d/proxy.conf;

  include                         /etc/nginx/conf.d/cdn.conf;

  location / {
    proxy_pass                   http://proxy/;
    proxy_redirect               / /;
    error_page                   502 =200 @failed;
  }

  include                         /etc/nginx/conf.d/certbot.conf;
  include                         /etc/nginx/conf.d/secure.conf;
  include                         /etc/nginx/conf.d/health.conf;
  include                         /etc/nginx/conf.d/monit.conf;
  include                         /etc/nginx/conf.d/purge.conf;
  include                         /etc/nginx/conf.d/failed.conf;
}

server {
  server_name                     {{SERVER_NAME}};
  server_tokens                   off;
  server_name_in_redirect         off;

  listen                          *:8080 reuseport;

  root                            {{NGINX_DOCROOT}}/{{SERVER_NAME}};

  set                             $cache_uri $request_uri;
  
  if ($redirect_uri)              { return 301 $redirect_uri; }

  access_log                      {{LOG_PREFIX}}/access.log main_ext if=$no_logs;
  
  include                         /etc/nginx/conf.d/location.conf;
  include                         /etc/nginx/redis.d/location.conf;
}
